1) python --version
2) pip install django
3)django-admin --version
4)django-admin startproject loyolaproj
if incase is there any error in step4 then creat virtual
(1.python -m venv myvenv, 2.myenv\scripts\activate,3.pip install django,4.(continue the rest))
5)cd loyolaproj
6)dir
7)python manage.py startapp loyolaapp
8)>python manage.py runserver
9) copy and past the given http in crome
10)pip install setuptools
11)pip install legacy-cgi
12)code
it open the vs coad 
open the settings.py from loyolaproj and add the loyolaapp in that

STEPS TO CREATE RESPONSE FROM A DJANGO:-

1-DEFINE A VIEW INSIDE VIEWS.PY FILE AT APPLICATION LEVEL and run this coad 

from django.shortcuts import render
from django.http import HttpResponse
#create your views hear
def first(request):
    return HttpResponse("<h1> welcome to world od django</h1>")
2- create a new file with the name "urls.py" at (application_level)
3-in this file we need to import the view which is created in this file we need to import the views which is created and we must menction it in url pattern of path attribute

## coad##
	from django.urls import path 
	from.import views
	urlpatterns=[
   		 path('',views.first,name='first')
	]

4- now we need to open the urls.py file at project level, there we need to mention our newly created uels.py which was created in the application_ and must include the path of file so thea response is forworded for the server

in coad(urls.py(loyolaproj))
include
 path('',include('loyolaapp.urls'))



python manage.py runserver


WORKING WITH MULTIPLE VIEWS USING SINGLE APPLICATIONS

from django.urls import path 
from.import views
urlpatterns=[
    path('view1',views.first,name='first'),
    path('view2',views.second,name='second'),
    path('view3',views.third,name='third'),
]


TO IMPLEMENT DRY URLS (Do not repeat yourself)
in django we can represent the dry urls with the help of regular expresions,whenever we are defining the multiple views in our system,we can use the concept of dry urls to simplify the application
views.py(application)

def first(request):
    return HttpResponse("<h1> view 1welcome to world of django</h1>")
def second(request):
    return HttpResponse("<h1>  view 2 welcome to loyola college </h>")
def third(request):
    return HttpResponse("<h1> view 3 this is my first web application </h>")
def fourth(request):
    return HttpResponse("<h1> view 4 this is my first web application </h>")
def fifth(request):
    return HttpResponse("<h1>  view 5 application </h>")
def sixth(request):
    return HttpResponse("<h1> view 6 web application </h>")
def seventh(request):
    return HttpResponse("<h1>  view 7first web application </h>")
def eighth(request):
    return HttpResponse("<h1> view 8 my first web application </h>")
def ninth(request):
    return HttpResponse("<h1> view 9 this is my first web application through django </h>")
def tenth(request):
    return HttpResponse("<h1> view 10 this is my first web application using django </h>")


TEMPLETS IN DJANGO
 it is very importrnt module in django which is used to separate the html coad from python code 
we can use the concept of templets to separate the html file for this we need to create a folder with the name templets (inside django application)
for the created folder we need to configure it in settings.py file
open setting.py file in the project  and add the package import 'os' this package is used to identify the templets folder that is created in the system, django has templets data dictionary,we need to mention the absolute part for the templets folder

create a django project by using a html file that consist of integrating variables 
1- open views.py file,create a view that will forword the values from views to html page
in views.py(application folder)
enter this coad 


def templateview(request):
    return render(request,'home.html',{'name':"shaik sajida"})

#in home.html file
<html>
    <head>
        <title>template program</title>
    </head>
    <body>
        <h1 style="color:red">welcome to template program</h1>
        <h2> welcome {{sajida}}</h2>
    </body>
</html>



STATIC TEMPLATES
 in static templates we need to create a new folder with the name static inside the django applications and the static folder contains three sub folders with the names CSS,JAVASCRIPT,IMAGES

TO LOAD THE static files django provaids load static template

STTIC TEMPLATES WITH IMAGES
open home.html file and write the following in images


<html>
    <head>
        <title>Template Program</title>
        
    </head>
    <body>
        <h1 style="color: Blue;">Welcome to Templates Program</h1>
        <h2>Welcome {{name}}</h2>
        <img src ="{% static 'images/india.jpg' %}" width = "500" height="300" alt="cannot be displayed"/>
    </body>
</html>



------------------------------------------------------------------------------------------------------------------------------------------------------------------
25-02-25
IMPORTING JAVASCRIP INTO DJANGO

create a new file name sample.js
cd ..

C:\Users\sajid>cd OneDrive

C:\Users\sajid\OneDrive>cd Desktop

C:\Users\sajid\OneDrive\Desktop>cd django

C:\Users\sajid\OneDrive\Desktop\django>cd loyolaproj

C:\Users\sajid\OneDrive\Desktop\django\loyolaproj>python manage.py runserver



DYNAMIC TEMPLATES
django provaid filter to develop the dynamic content into a program and filters are classified into three types
----------------
{"%......%}
this dynamic templates are used to retrive values from views.py file into django application for creating the filters first we need to mention the corresponding view with the help of certain variables and we need to return those values using a dictionary along with corresponding html file
- filters are used to obtain the values into user specified pattern

DATABASE CONNECTION IN DJANGO
using django we can connect to no of databas
like oracle
mangodb
posttrust sql
the configuration is to be changed in data basess options
-)open cmd and install the following package to connect with my sql












django provaids objectusing which connect to the data base and create to the data base models.py in django application 
the clases which we are representing the models.py file the fields in the class represents the fields in the database 

once the models are completed we need to represent the created model in admi,py file so thea super user can assece the file

in django after creating the models we need to mention about the model in views.py file,the values are to be  retrived from the data base for this we need to mention the views.py file along with the html page
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
27-2-25

HTML CODE:-


{% load static %}
<html>
<head>
    <title>
    </title>
    <!--<script src="{% static 'javascript/sample.js'%}"
    type="text/javascript"></script>
    <link href="{% static 'css/sample.css' %}"
    rel="stylesheet">-->
</head>
<body>
    <!--<img src ="{% static 'images/india.jpg' %}" width = "500" height="300"
     alt="cannot be displayed"/>-->
     <h1>Employee Date</h1>
     {% if emp %}
     <h2>Display Data</h2>
     {% for e in emp %}
     <h3>{{e.eno}}</h3>
     <h3>{{e.ename}}</h3>
     <h3>{{e.esal}}</h3>
     <h3>{{e.eaddress}}</h3>
     {% endfor %}
     {% else %}
     <h1>No Data</h1>
     {% endif %}
</body>
</html>


FORMS IN DJANGO
----------------
-)forms are used to create html code  without writing the html page in django, forms are used such that when we develop a project in django the project should not hacked by the third party servers for this django provides a token called CSRF (cross site request forgery )
-) when we use the forms in django no need to mention the validation science while defining the each field form contains the validations, it will write the html code which is equlent to input tag in html 
-) All the values of the form are extracted using post method which makes a django application highly secured
-) Ceeate a file with the name forms.py inside the application file